name: Test

on: [push, pull_request]

jobs:

  Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.11' ]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.4.0
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached Poetry virtualenv
        uses: actions/cache@v3
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        run: |
          poetry install -E full
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Tests and produce coverage
        continue-on-error: true
        run: |
          poetry run coverage run -m unittest discover
          poetry run coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: runner.python-version == '3.8' && github.event_name != 'pull_request'
        with:
          file: coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          fail_ci_if_error: true
